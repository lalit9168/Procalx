<div class="calculator-container">
  <!-- Animated Background -->
  <div class="animated-background">
    <div class="particle" *ngFor="let particle of particles" 
         [style.left.px]="particle.x"
         [style.top.px]="particle.y"
         [style.animation-delay.s]="particle.delay">
    </div>
  </div>

  <!-- Main Calculator Card -->
  <div class="calculator-card">
    <!-- Header Section -->
    <div class="header">
      <div class="header-content">
        <div class="icon-container">
          <div class="calculator-icon">
            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect>
              <line x1="9" y1="9" x2="15" y2="15"></line>
              <line x1="15" y1="9" x2="9" y2="15"></line>
            </svg>
          </div>
          <div class="theme-toggle" (click)="toggleTheme()">
            <span class="theme-icon">{{ isDarkMode ? '‚òÄÔ∏è' : 'üåô' }}</span>
          </div>
        </div>
        <h1 class="title">Advanced Calculator</h1>
        <p class="subtitle">Professional mathematical computations</p>
      </div>
    </div>

    <!-- Main Content -->
    <div class="calculator-body">
      <!-- Display Section -->
      <div class="display-section">
        <div class="display-primary">
          <span class="display-value">{{ displayValue }}</span>
        </div>
        <div class="display-secondary" *ngIf="lastCalculation">
          <span class="last-calc">{{ lastCalculation }}</span>
        </div>
      </div>

      <!-- Input Form -->
      <form (submit)="calculate($event)" class="calculator-form">
        <div class="inputs-grid">
          <!-- First Number Input -->
          <div class="input-group">
            <label for="firstNumber" class="input-label">
              <span class="label-text">
                <svg class="label-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <path d="M3 3h6v6H3zM15 3h6v6h-6zM3 15h6v6H3zM15 15h6v6h-6z"></path>
                </svg>
                First Number
              </span>
              <span class="label-badge">A</span>
            </label>
            <div class="input-wrapper">
              <input 
                id="firstNumber"
                type="number" 
                [(ngModel)]="a" 
                name="a" 
                placeholder="Enter first number" 
                required
                step="any"
                class="number-input"
                (input)="updateDisplay()"
                [class.error]="error && error.includes('first')"
              >
              <div class="input-glow"></div>
            </div>
          </div>

          <!-- Operation Selection -->
          <div class="operation-group">
            <label for="operation" class="input-label">
              <span class="label-text">
                <svg class="label-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <circle cx="12" cy="12" r="3"></circle>
                  <path d="M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1 1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z"></path>
                </svg>
                Operation
              </span>
              <span class="label-badge">OP</span>
            </label>
            <div class="select-wrapper">
              <select 
                id="operation"
                [(ngModel)]="operation" 
                name="operation"
                class="operation-select"
                (change)="onOperationChange()"
              >
                <option value="add">‚ûï Addition</option>
                <option value="subtract">‚ûñ Subtraction</option>
                <option value="multiply">‚úñÔ∏è Multiplication</option>
                <option value="divide">‚ûó Division</option>
                <option value="power">üî∫ Power</option>
                <option value="factorial">‚ùó Factorial (A only)</option>
                <option value="sqrt">‚àö Square Root (A only)</option>
                <option value="modulus">% Modulus</option>
              
              </select>
              <div class="select-arrow">
                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <polyline points="6,9 12,15 18,9"></polyline>
                </svg>
              </div>
            </div>
          </div>

          <!-- Second Number Input -->
          <div class="input-group" [class.disabled]="isSingleArgOperation()">
            <label for="secondNumber" class="input-label">
              <span class="label-text">
                <svg class="label-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <path d="M3 3h6v6H3zM15 3h6v6h-6zM3 15h6v6H3zM15 15h6v6h-6z"></path>
                </svg>
                Second Number
              </span>
              <span class="label-badge" [class.optional]="isSingleArgOperation()">
                {{ isSingleArgOperation() ? 'N/A' : 'B' }}
              </span>
            </label>
            <div class="input-wrapper">
              <input 
                id="secondNumber"
                type="number" 
                [(ngModel)]="b" 
                name="b" 
                placeholder="Enter second number" 
                step="any"
                class="number-input"
                (input)="updateDisplay()"
                [disabled]="isSingleArgOperation()"
                [class.error]="error && error.includes('second')"
              >
              <div class="input-glow"></div>
            </div>
          </div>
        </div>

        <!-- Action Buttons -->
        <div class="action-buttons">
          <button 
            type="button" 
            class="action-btn secondary"
            (click)="clearAll()"
            [disabled]="isLoading"
          >
            <svg class="btn-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M3 6h18"></path>
              <path d="M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6"></path>
              <path d="M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2"></path>
            </svg>
            <span>Clear</span>
          </button>

          <button 
            type="submit" 
            class="action-btn primary"
            [disabled]="isLoading"
            [class.loading]="isLoading"
          >
            <span *ngIf="!isLoading" class="btn-content">
              <svg class="btn-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <polygon points="13,2 3,14 12,14 11,22 21,10 12,10"></polygon>
              </svg>
              <span>Calculate</span>
            </span>
            <span *ngIf="isLoading" class="loading-content">
              <div class="loading-spinner"></div>
              <span>Computing...</span>
            </span>
          </button>
        </div>
      </form>

      <!-- Result Section -->
      <div class="result-section" *ngIf="result !== null || error">
        <div *ngIf="result !== null && !error" class="result-card success">
          <div class="result-header">
            <div class="result-icon-wrapper">
              <svg class="result-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
                <polyline points="22,4 12,14.01 9,11.01"></polyline>
              </svg>
            </div>
            <div class="result-info">
              <h3 class="result-title">Result</h3>
              <p class="result-subtitle">{{ getCalculationString() }}</p>
            </div>
          </div>
          <div class="result-value-container">
            <div class="result-value">{{ formatResult(result) }}</div>
          </div>
          <button class="copy-btn" (click)="copyResult()" title="Copy result">
            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect>
              <path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path>
            </svg>
          </button>
        </div>

        <div *ngIf="error" class="result-card error">
          <div class="result-header">
            <div class="result-icon-wrapper">
              <svg class="result-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <circle cx="12" cy="12" r="10"></circle>
                <line x1="15" y1="9" x2="9" y2="15"></line>
                <line x1="9" y1="9" x2="15" y2="15"></line>
              </svg>
            </div>
            <div class="result-info">
              <h3 class="result-title">Error</h3>
              <p class="result-subtitle">Something went wrong</p>
            </div>
          </div>
          <div class="error-message">{{ error }}</div>
        </div>
      </div>

      <!-- History Section -->
      <div class="history-section" *ngIf="history.length > 0">
        <div class="history-header">
          <h3 class="history-title">
            <svg class="history-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <circle cx="12" cy="12" r="10"></circle>
              <polyline points="12,6 12,12 16,14"></polyline>
            </svg>
            Recent Calculations
          </h3>
          <button class="clear-history-btn" (click)="clearHistory()" title="Clear history">
            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <polyline points="3,6 5,6 21,6"></polyline>
              <path d="M19,6v14a2,2 0 0,1-2,2H7a2,2 0 0,1-2-2V6M8,6V4a2,2 0 0,1 2-2h4a2,2 0 0,1 2,2v2"></path>
            </svg>
          </button>
        </div>
        <div class="history-list">
          <div class="history-item" *ngFor="let item of history.slice(-5)" (click)="useHistoryItem(item)">
            <div class="history-content">
              <div class="history-expression">{{ item.expression }}</div>
              <div class="history-result">{{ formatResult(item.result) }}</div>
            </div>
            <div class="history-time">{{ formatTime(item.timestamp) }}</div>
          </div>
        </div>
      </div>

      <!-- Operation Info -->
      <div class="operation-info">
        <div class="info-card">
          <div class="info-header">
            <div class="info-icon">
              <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <circle cx="12" cy="12" r="10"></circle>
                <path d="M9,9h6v6H9z"></path>
              </svg>
            </div>
            <div class="info-content">
              <h4 class="info-title">{{ getOperationName() }}</h4>
              <p class="info-description">{{ getOperationDescription() }}</p>
            </div>
          </div>
          <div class="info-stats">
            <div class="stat">
              <span class="stat-label">Calculations Today</span>
              <span class="stat-value">{{ history.length }}</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>